@model IEnumerable<Pin>

<div class="container">
    <div class="row">
        @foreach (var pin in Model)    
        {
            <div class="col-md-6" >
                <div class="card mb-3" style="width: 100%;"
                    data-id="@pin.PinId" 
                    data-name="@pin.Name" 
                    data-date="@pin.DateCreated" 
                    data-rating="@pin.Rating" 
                    data-comment="@pin.Comment" 
                    data-image="@pin.ImageUrl"
                    data-latitude="@pin.Latitude" 
                    data-longitude="@pin.Longitude"
                    data-userid="@pin.UserName">
                    
                    <img class="card-img-top" src="@pin.ImageUrl" alt="Item Image" style="width: 100%;">
                    <div class="card-body">
                        <h5 class="card-title">@pin.Name</h5>
                        <p class="card-text">@pin.Comment</p>

                        <p><strong>Date:</strong> @pin.DateCreated</p>
                        <p><strong>Rating:</strong> @pin.Rating.ToString("")</p>
                        <p><strong>Username:</strong> @pin.UserName</p>

                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Update" asp-route-id="@pin.PinId" class="btn btn-primary">Update</a>
                            <a asp-action="Delete" asp-route-id="@pin.PinId" class="btn btn-danger">Delete</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>

// code to selected items in the list
document.querySelectorAll('.card').forEach(card => {
    card.addEventListener('click', function () {
        // Remove the 'selected' class from all rows
        document.querySelectorAll('.card').forEach(c => c.classList.remove('selected'));

        // Add the 'selected' class to the clicked row
        this.classList.add('selected');

       // Stores location data from selected pin
        var latitude = this.getAttribute('data-latitude');
        var longitude = this.getAttribute('data-longitude');
        
        //sets location data
        sessionStorage.setItem('Lat', latitude);
        sessionStorage.setItem('Long', longitude);
        
        //updates map and sets the pointer to location
        map.setView([latitude, longitude], 13);
        if (currentMarker) {
            map.removeLayer(currentMarker);
        }

        // Add a new marker to the map
        currentMarker = L.marker([latitude, longitude]).addTo(map);

        //currentMarker.bindPopup("You selected the pin at " + latitude + ", " + longitude).openPopup();
    });
});
</script>

<style>
    /* Optional CSS to visually highlight the selected row */
    .selected {
        background-color: #e0e0e0; /* Light gray background */
    }
</style>