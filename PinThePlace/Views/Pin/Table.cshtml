@model PinsViewModel


<div class="container">
    <div class="row">
        
        <!-- første kolonne -->

        <div class="col-md-6 ">
            <h3>Find your place</h3>
            <!--inputing google maps-->
            <div id="map" style="height: 750px; width: 100%;"></div>
            <!--temporary picture-->

            <!--- <img src="~/images/map.png" alt="Map Image"> -->
                 <p>
             <!--Mekanisme for å lage ny data entry CRUD-->
            <a id="add_a_pin" class="btn addpinButton"
                asp-controller="Pin"
                asp-action="Create"> Add a pin</a>
        </p>
        </div>

        <!--andre kolonne-->

        <div class="col-md-6">
            <!--lenker til feed og mypins-->
            <div>
                <button autofocus id="showFeedWindow" class="feedButton btn btn-lg">Feed</button>
                <button id="showMypinsWindow" class="mypinsButton btn btn-lg">My Pins</button>
                <button id="showFavWindow" class="favsButton btn btn-lg">Favorites</button>
            </div>
            <!--Feed window -->
            <div id="feedwindow" class="contentwindow" >
                <partial name="_Feed" model="Model.Pins"/>
            </div>
            <!--mypins window-->
            <div id="mypinswindow" class="contentwindow" style="display: none;">
                <partial name="_MyPins" model="Model.Pins"/>
            </div>
            <!--favories window-->
            <div id="favwindow" class="contentwindow" style="display: none;">
                <partial name="_Favorites" model="Model.Favorites"/>
            </div>
        </div>
    </div>
</div>
<script src="~/js/jquery.min.js"></script>
<script src="~/js/bootstrap.min.js"></script>

<script>
  
  function updateMapAndMarker(card) {
    // Get latitude and longitude from the card's data attributes
    var lat = card.dataset.latitude;
    var lng = card.dataset.longitude;

    // Update the map view to the coordinates
    map.setView([lat, lng], 13);

    // Update the marker position
    if (currentMarker) {
        map.removeLayer(currentMarker);
    }
    currentMarker = L.marker([lat, lng]).addTo(map);
}
$(document).ready(function() {
    
    $('#showFeedWindow').focus();

    // Select the first card when entering the page
    var firstCard = document.querySelector('.cardFeed');
    var currentpage = '.cardFeed';
    // Add the 'active' class to the first card
    if (firstCard) {
        firstCard.classList.add('active');
    }

    // Function to set click handlers on cards
    function setCardClickHandlers(currentpage) {
        document.querySelectorAll(currentpage).forEach(card => {
            card.addEventListener('click', function () {
                // Remove the 'active' class from all rows
                document.querySelectorAll(currentpage).forEach(c => c.classList.remove('active'));

                // Add the 'active' class to the clicked row
                this.classList.add('active');

                // Update map and marker
                updateMapAndMarker(this);
            });
        });
    }
    /*FEED*/
    // Code for switching between windows and switching background color
    $("#showFeedWindow").click(function(e){
    e.preventDefault();
    $("#feedwindow").show();
    $("#favwindow").hide();
     $("#mypinswindow").hide();
    $("#favwindow").removeClass("contentwindow2").addClass("contentwindow");
    currentpage = '.cardFeed';
    setCardClickHandlers(currentpage);

    document.querySelectorAll('.cardFeed, .cardMypins, .cardFavs').forEach(c => c.classList.remove('active'));

    // Select the first card of the new page
    var firstCard = document.querySelector(currentpage);
    
    // Add the 'active' class to the first card
    if (firstCard) {
        firstCard.classList.add('active');

        // Update the map and marker
        updateMapAndMarker(firstCard);
    }
    });
    /*MY PINS*/
    $("#showMypinsWindow").click(function(e){
        e.preventDefault();
        $("#mypinswindow").show();
        $("#feedwindow").hide();
        $("#favwindow").hide();
        $("#mypinswindow").removeClass("contentwindow").addClass("contentwindow2"); 
        currentpage = '.cardMypins';
        setCardClickHandlers(currentpage);

        document.querySelectorAll('.cardFeed, .cardMypins, .cardFavs').forEach(c => c.classList.remove('active'));

        // Select the first card of the new page
        var firstCard = document.querySelector(currentpage);
        
        // Add the 'active' class to the first card
        if (firstCard) {
            firstCard.classList.add('active');

            // Update the map and marker
            updateMapAndMarker(firstCard);
        }
    });
    /*FAVS*/
    $("#showFavWindow").click(function(e){
        e.preventDefault();
        // Hide other pages
         $("#favwindow").show();
        $("#feedwindow").hide();
        $("#mypinswindow").hide();
         $("#favwindow").removeClass("contentwindow").addClass("contentwindow3"); 

        currentpage = '.cardFavs';
        setCardClickHandlers(currentpage);

        // Deselect all cards
        document.querySelectorAll('.cardFeed, .cardMypins, .cardFavs').forEach(c => c.classList.remove('active'));

        // Select the first card of the new page
        var firstCard = document.querySelector(currentpage);
        
        // Add the 'active' class to the first card
        if (firstCard) {
            firstCard.classList.add('active');

            // Update the map and marker
            updateMapAndMarker(firstCard);
        }
    });

    // Call setCardClickHandlers function initially for '.cardFeed'
    setCardClickHandlers(currentpage);
});

window.onload = function() {
    // Select the first card when entering the page
    var firstCard = document.querySelector('.card');

    // Add the 'active' class to the first card
    if (firstCard) {
        firstCard.classList.add('active');
    }
};

// for å få kart inn i div med map id
/*function initMap() {
    var mapOptions = {
        zoom: 8,
        center: { lat: -34.397, lng: 150.644 }, 
    };
    var map = new google.maps.Map(document.getElementById('map'), mapOptions);
} */
</script>

<script>
    //Adding the map 
    var map = L.map('map').setView([59.9139,10.7522],13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: 'Map data © <a href="https://openstreetmap.org">OpenStreetMap</a> contributors'
    }).addTo(map);

    const provider = new GeoSearch.OpenStreetMapProvider();

    const searchControl = new GeoSearch.GeoSearchControl({
    provider: provider,
    showMarker: true,
    showPopup: false,
    marker: {
        icon: new L.Icon.Default(),
        draggable: false,
    },
    popupFormat: ({ query, result }) => result.label,
    maxMarkers: 1,
    retainZoomLevel: false,
    animateZoom: true,
    autoClose: true,
    searchLabel: 'Enter address',
    keepResult: true
    });

    map.addControl(searchControl);



    //Makes a pop up that shows the clicked places' latitude and longitude 
    var currentMarker = null;


    function onMapClick(e) {
        var lat = e.latlng.lat.toFixed(6);
        var long = e.latlng.lng.toFixed(6);

        if (currentMarker){
            map.removeLayer(currentMarker);
        }
        currentMarker = L.marker(e.latlng).addTo(map);
    
        
        sessionStorage.setItem('Lat',lat);
        sessionStorage.setItem('Long',long);

        //document.getElementById("latitude").value = lat;
       // document.getElementById("Longitude").value = long;
    }
    map.on('click',onMapClick);

    map.on('geosearch/showlocation', function(e) {
        if (e.location){
            var lat = e.location.y;
            var long = e.location.x;

            if (currentMarker){
                map.removeLayer(currentMarker);
            }
            currentMarker = L.marker([lat,long]).addTo(map);
    
            sessionStorage.setItem('Lat',lat);
            sessionStorage.setItem('Long',long);

            console.log('GeoSearch location:', lat, long);
            console.log('sessionStorage after GeoSearch:', sessionStorage);
        } else {
            console.error("location null");
        }
    });

    document.getElementById('add_a_pin').addEventListener('click', function(e) {
    var lat = sessionStorage.getItem('Lat');
    var long = sessionStorage.getItem('Long');

    if (!lat || !long) {
        e.preventDefault();
        alert('Please click on the map first before trying to add a pin!.');
    }
});
</script>


<!--hente kart med API key fra Google maps-->

<!--<script async 
    src="https://maps.googleapis.com/maps/api/js?key=  YOUR_API_KEY   &callback=initMap">
</script>-->
